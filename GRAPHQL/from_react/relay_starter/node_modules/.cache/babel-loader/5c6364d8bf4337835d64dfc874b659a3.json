{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ConnectionHandler = require('./connection/ConnectionHandler');\n\nvar MutationHandlers = require('./connection/MutationHandlers');\n\nvar invariant = require('invariant');\n\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return ConnectionHandler;\n\n    case 'deleteRecord':\n      return MutationHandlers.DeleteRecordHandler;\n\n    case 'deleteEdge':\n      return MutationHandlers.DeleteEdgeHandler;\n\n    case 'appendEdge':\n      return MutationHandlers.AppendEdgeHandler;\n\n    case 'prependEdge':\n      return MutationHandlers.PrependEdgeHandler;\n\n    case 'appendNode':\n      return MutationHandlers.AppendNodeHandler;\n\n    case 'prependNode':\n      return MutationHandlers.PrependNodeHandler;\n  }\n\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle) : invariant(false) : void 0;\n}\n\nmodule.exports = RelayDefaultHandlerProvider;","map":{"version":3,"sources":["/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/node_modules/relay-runtime/lib/handlers/RelayDefaultHandlerProvider.js"],"names":["ConnectionHandler","require","MutationHandlers","invariant","RelayDefaultHandlerProvider","handle","DeleteRecordHandler","DeleteEdgeHandler","AppendEdgeHandler","PrependEdgeHandler","AppendNodeHandler","PrependNodeHandler","process","env","NODE_ENV","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,iBAAiB,GAAGC,OAAO,CAAC,gCAAD,CAA/B;;AAEA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,+BAAD,CAA9B;;AAEA,IAAIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASG,2BAAT,CAAqCC,MAArC,EAA6C;AAC3C,UAAQA,MAAR;AACE,SAAK,YAAL;AACE,aAAOL,iBAAP;;AAEF,SAAK,cAAL;AACE,aAAOE,gBAAgB,CAACI,mBAAxB;;AAEF,SAAK,YAAL;AACE,aAAOJ,gBAAgB,CAACK,iBAAxB;;AAEF,SAAK,YAAL;AACE,aAAOL,gBAAgB,CAACM,iBAAxB;;AAEF,SAAK,aAAL;AACE,aAAON,gBAAgB,CAACO,kBAAxB;;AAEF,SAAK,YAAL;AACE,aAAOP,gBAAgB,CAACQ,iBAAxB;;AAEF,SAAK,aAAL;AACE,aAAOR,gBAAgB,CAACS,kBAAxB;AApBJ;;AAuBA,GAAC,KAAD,GAASC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAAC,KAAD,EAAQ,4DAAR,EAAsEE,MAAtE,CAAjD,GAAiIF,SAAS,CAAC,KAAD,CAAnJ,GAA6J,KAAK,CAAlK;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBZ,2BAAjB","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar ConnectionHandler = require('./connection/ConnectionHandler');\n\nvar MutationHandlers = require('./connection/MutationHandlers');\n\nvar invariant = require('invariant');\n\nfunction RelayDefaultHandlerProvider(handle) {\n  switch (handle) {\n    case 'connection':\n      return ConnectionHandler;\n\n    case 'deleteRecord':\n      return MutationHandlers.DeleteRecordHandler;\n\n    case 'deleteEdge':\n      return MutationHandlers.DeleteEdgeHandler;\n\n    case 'appendEdge':\n      return MutationHandlers.AppendEdgeHandler;\n\n    case 'prependEdge':\n      return MutationHandlers.PrependEdgeHandler;\n\n    case 'appendNode':\n      return MutationHandlers.AppendNodeHandler;\n\n    case 'prependNode':\n      return MutationHandlers.PrependNodeHandler;\n  }\n\n  !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayDefaultHandlerProvider: No handler provided for `%s`.', handle) : invariant(false) : void 0;\n}\n\nmodule.exports = RelayDefaultHandlerProvider;"]},"metadata":{},"sourceType":"script"}