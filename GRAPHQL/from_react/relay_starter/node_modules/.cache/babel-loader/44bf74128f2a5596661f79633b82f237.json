{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayDeclarativeMutationConfig = require('../mutations/RelayDeclarativeMutationConfig');\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require2.createOperationDescriptor;\n\nvar _require3 = require('../store/RelayModernSelector'),\n    createReaderSelector = _require3.createReaderSelector;\n\nvar warning = require(\"fbjs/lib/warning\");\n\nfunction requestSubscription(environment, config) {\n  var subscription = getRequest(config.subscription);\n\n  if (subscription.params.operationKind !== 'subscription') {\n    throw new Error('requestSubscription: Must use Subscription operation');\n  }\n\n  var configs = config.configs,\n      onCompleted = config.onCompleted,\n      onError = config.onError,\n      onNext = config.onNext,\n      variables = config.variables,\n      cacheConfig = config.cacheConfig;\n  var operation = createOperationDescriptor(subscription, variables, cacheConfig);\n  process.env.NODE_ENV !== \"production\" ? warning(!(config.updater && configs), 'requestSubscription: Expected only one of `updater` and `configs` to be provided') : void 0;\n\n  var _ref = configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null\n  /* optimisticUpdater */\n  ,\n  /* optimisticUpdater */\n  config.updater) : config,\n      updater = _ref.updater;\n\n  var sub = environment.executeSubscription({\n    operation: operation,\n    updater: updater\n  }).subscribe({\n    next: function next(responses) {\n      if (onNext != null) {\n        var selector = operation.fragment;\n        var nextID;\n\n        if (Array.isArray(responses)) {\n          var _responses$, _responses$$extension;\n\n          nextID = (_responses$ = responses[0]) === null || _responses$ === void 0 ? void 0 : (_responses$$extension = _responses$.extensions) === null || _responses$$extension === void 0 ? void 0 : _responses$$extension.__relay_subscription_root_id;\n        } else {\n          var _responses$extensions;\n\n          nextID = (_responses$extensions = responses.extensions) === null || _responses$extensions === void 0 ? void 0 : _responses$extensions.__relay_subscription_root_id;\n        }\n\n        if (typeof nextID === 'string') {\n          selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner);\n        }\n\n        var data = environment.lookup(selector).data; // $FlowFixMe[incompatible-cast]\n\n        onNext(data);\n      }\n    },\n    error: onError,\n    complete: onCompleted\n  });\n  return {\n    dispose: sub.unsubscribe\n  };\n}\n\nmodule.exports = requestSubscription;","map":{"version":3,"sources":["/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/node_modules/relay-runtime/lib/subscription/requestSubscription.js"],"names":["RelayDeclarativeMutationConfig","require","_require","getRequest","_require2","createOperationDescriptor","_require3","createReaderSelector","warning","requestSubscription","environment","config","subscription","params","operationKind","Error","configs","onCompleted","onError","onNext","variables","cacheConfig","operation","process","env","NODE_ENV","updater","_ref","convert","sub","executeSubscription","subscribe","next","responses","selector","fragment","nextID","Array","isArray","_responses$","_responses$$extension","extensions","__relay_subscription_root_id","_responses$extensions","node","owner","data","lookup","error","complete","dispose","unsubscribe","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar RelayDeclarativeMutationConfig = require('../mutations/RelayDeclarativeMutationConfig');\n\nvar _require = require('../query/GraphQLTag'),\n    getRequest = _require.getRequest;\n\nvar _require2 = require('../store/RelayModernOperationDescriptor'),\n    createOperationDescriptor = _require2.createOperationDescriptor;\n\nvar _require3 = require('../store/RelayModernSelector'),\n    createReaderSelector = _require3.createReaderSelector;\n\nvar warning = require(\"fbjs/lib/warning\");\n\nfunction requestSubscription(environment, config) {\n  var subscription = getRequest(config.subscription);\n\n  if (subscription.params.operationKind !== 'subscription') {\n    throw new Error('requestSubscription: Must use Subscription operation');\n  }\n\n  var configs = config.configs,\n      onCompleted = config.onCompleted,\n      onError = config.onError,\n      onNext = config.onNext,\n      variables = config.variables,\n      cacheConfig = config.cacheConfig;\n  var operation = createOperationDescriptor(subscription, variables, cacheConfig);\n  process.env.NODE_ENV !== \"production\" ? warning(!(config.updater && configs), 'requestSubscription: Expected only one of `updater` and `configs` to be provided') : void 0;\n\n  var _ref = configs ? RelayDeclarativeMutationConfig.convert(configs, subscription, null\n  /* optimisticUpdater */\n  ,\n  /* optimisticUpdater */\n  config.updater) : config,\n      updater = _ref.updater;\n\n  var sub = environment.executeSubscription({\n    operation: operation,\n    updater: updater\n  }).subscribe({\n    next: function next(responses) {\n      if (onNext != null) {\n        var selector = operation.fragment;\n        var nextID;\n\n        if (Array.isArray(responses)) {\n          var _responses$, _responses$$extension;\n\n          nextID = (_responses$ = responses[0]) === null || _responses$ === void 0 ? void 0 : (_responses$$extension = _responses$.extensions) === null || _responses$$extension === void 0 ? void 0 : _responses$$extension.__relay_subscription_root_id;\n        } else {\n          var _responses$extensions;\n\n          nextID = (_responses$extensions = responses.extensions) === null || _responses$extensions === void 0 ? void 0 : _responses$extensions.__relay_subscription_root_id;\n        }\n\n        if (typeof nextID === 'string') {\n          selector = createReaderSelector(selector.node, nextID, selector.variables, selector.owner);\n        }\n\n        var data = environment.lookup(selector).data; // $FlowFixMe[incompatible-cast]\n\n        onNext(data);\n      }\n    },\n    error: onError,\n    complete: onCompleted\n  });\n  return {\n    dispose: sub.unsubscribe\n  };\n}\n\nmodule.exports = requestSubscription;"]},"metadata":{},"sourceType":"script"}