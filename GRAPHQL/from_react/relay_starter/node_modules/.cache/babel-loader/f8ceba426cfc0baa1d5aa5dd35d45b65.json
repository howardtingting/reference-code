{"ast":null,"code":"var _AppRepositoryNameQuery,\n    _jsxFileName = \"/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport { RelayEnvironmentProvider, loadQuery, usePreloadedQuery } from 'react-relay/hooks';\nimport RelayEnvironment from './RelayEnvironment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Suspense\n} = React; //define a query\n\nconst RepositoryNameQuery = _AppRepositoryNameQuery !== void 0 ? _AppRepositoryNameQuery : (_AppRepositoryNameQuery = require(\"./__generated__/AppRepositoryNameQuery.graphql\"), _AppRepositoryNameQuery.hash && _AppRepositoryNameQuery.hash !== \"9f041295559a43de4cee97435d379fd0\" && console.error(\"The definition of 'AppRepositoryNameQuery' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _AppRepositoryNameQuery); // Immediately load the query as our app starts\n// in real app: move this to routing configuration, preloading data as we transition to new routes\n\nconst preloadedQuery = loadQuery(RelayEnvironment, RepositoryNameQuery, {\n  /* query variables */\n});\n\nfunction App(props) {\n  _s();\n\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.repository.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gOoAgDlVPdxEXFj+8uugLFK2myc=\", false, function () {\n  return [usePreloadedQuery];\n});\n\n_c = App;\n\nfunction AppRoot(props) {\n  return /*#__PURE__*/_jsxDEV(RelayEnvironmentProvider, {\n    environment: RelayEnvironment,\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: \"Loading...\",\n      children: /*#__PURE__*/_jsxDEV(App, {\n        preloadedQuery: preloadedQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = AppRoot;\nexport default AppRoot;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppRoot\");","map":{"version":3,"sources":["/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/src/App.js"],"names":["React","RelayEnvironmentProvider","loadQuery","usePreloadedQuery","RelayEnvironment","Suspense","RepositoryNameQuery","preloadedQuery","App","props","data","repository","name","AppRoot"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,SACEC,wBADF,EAEEC,SAFF,EAGEC,iBAHF,QAIO,mBAJP;AAKA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAeL,KAArB,C,CAEA;;AACA,MAAMM,mBAAmB,8bAAzB,C,CAQA;AACA;;AACA,MAAMC,cAAc,GAAGL,SAAS,CAACE,gBAAD,EAAmBE,mBAAnB,EAAwC;AACtE;AADsE,CAAxC,CAAhC;;AAIA,SAASE,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAMC,IAAI,GAAGP,iBAAiB,CAACG,mBAAD,EAAsBG,KAAK,CAACF,cAA5B,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAA,kBAAIG,IAAI,CAACC,UAAL,CAAgBC;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVQJ,G;UACML,iB;;;KADNK,G;;AAYT,SAASK,OAAT,CAAiBJ,KAAjB,EAAwB;AACtB,sBACE,QAAC,wBAAD;AAA0B,IAAA,WAAW,EAAEL,gBAAvC;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAI,YAAtB;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,cAAc,EAAEG;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;MARQM,O;AAUT,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport graphql from 'babel-plugin-relay/macro';\nimport {\n  RelayEnvironmentProvider,\n  loadQuery,\n  usePreloadedQuery\n} from 'react-relay/hooks';\nimport RelayEnvironment from './RelayEnvironment';\n\nconst { Suspense } = React;\n\n//define a query\nconst RepositoryNameQuery = graphql`\n  query AppRepositoryNameQuery {\n    repository(owner: \"facebook\", name: \"relay\") {\n      name\n    }\n  }\n`;\n\n// Immediately load the query as our app starts\n// in real app: move this to routing configuration, preloading data as we transition to new routes\nconst preloadedQuery = loadQuery(RelayEnvironment, RepositoryNameQuery, {\n  /* query variables */\n});\n\nfunction App(props) {\n  const data = usePreloadedQuery(RepositoryNameQuery, props.preloadedQuery);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>{data.repository.name}</p>\n      </header>\n    </div>\n  );\n}\n\nfunction AppRoot(props) {\n  return (\n    <RelayEnvironmentProvider environment={RelayEnvironment}>\n      <Suspense fallback = {\"Loading...\"}>\n        <App preloadedQuery={preloadedQuery}/>\n      </Suspense>\n    </RelayEnvironmentProvider>\n  )\n}\n\nexport default AppRoot;\n"]},"metadata":{},"sourceType":"module"}