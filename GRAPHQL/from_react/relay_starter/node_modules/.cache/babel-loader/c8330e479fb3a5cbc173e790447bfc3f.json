{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./loadQuery'),\n    useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\n\nvar useFragmentNode = require('./useFragmentNode');\n\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\n\nvar _require2 = require('react'),\n    useDebugValue = _require2.useDebugValue;\n\nvar _require3 = require('relay-runtime'),\n    getFragment = _require3.getFragment;\n\nfunction useFragment(fragment, key) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var fragmentNode = getFragment(fragment);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useFragment()');\n\n  var _useFragmentNode = useFragmentNode(fragmentNode, key, 'useFragment()'),\n      data = _useFragmentNode.data;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: data\n    });\n  }\n\n  return data;\n}\n\nmodule.exports = useFragment;","map":{"version":3,"sources":["/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/node_modules/react-relay/lib/relay-hooks/useFragment.js"],"names":["_require","require","useTrackLoadQueryInRender","useFragmentNode","useStaticFragmentNodeWarning","_require2","useDebugValue","_require3","getFragment","useFragment","fragment","key","fragmentNode","_useFragmentNode","data","process","env","NODE_ENV","name","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,yBAAyB,GAAGF,QAAQ,CAACE,yBADzC;;AAGA,IAAIC,eAAe,GAAGF,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAIG,4BAA4B,GAAGH,OAAO,CAAC,gCAAD,CAA1C;;AAEA,IAAII,SAAS,GAAGJ,OAAO,CAAC,OAAD,CAAvB;AAAA,IACIK,aAAa,GAAGD,SAAS,CAACC,aAD9B;;AAGA,IAAIC,SAAS,GAAGN,OAAO,CAAC,eAAD,CAAvB;AAAA,IACIO,WAAW,GAAGD,SAAS,CAACC,WAD5B;;AAGA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,GAA/B,EAAoC;AAClC;AACA;AACAT,EAAAA,yBAAyB;AACzB,MAAIU,YAAY,GAAGJ,WAAW,CAACE,QAAD,CAA9B;AACAN,EAAAA,4BAA4B,CAACQ,YAAD,EAAe,iCAAf,CAA5B;;AAEA,MAAIC,gBAAgB,GAAGV,eAAe,CAACS,YAAD,EAAeD,GAAf,EAAoB,eAApB,CAAtC;AAAA,MACIG,IAAI,GAAGD,gBAAgB,CAACC,IAD5B;;AAGA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACAX,IAAAA,aAAa,CAAC;AACZI,MAAAA,QAAQ,EAAEE,YAAY,CAACM,IADX;AAEZJ,MAAAA,IAAI,EAAEA;AAFM,KAAD,CAAb;AAID;;AAED,SAAOA,IAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBX,WAAjB","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _require = require('./loadQuery'),\n    useTrackLoadQueryInRender = _require.useTrackLoadQueryInRender;\n\nvar useFragmentNode = require('./useFragmentNode');\n\nvar useStaticFragmentNodeWarning = require('./useStaticFragmentNodeWarning');\n\nvar _require2 = require('react'),\n    useDebugValue = _require2.useDebugValue;\n\nvar _require3 = require('relay-runtime'),\n    getFragment = _require3.getFragment;\n\nfunction useFragment(fragment, key) {\n  // We need to use this hook in order to be able to track if\n  // loadQuery was called during render\n  useTrackLoadQueryInRender();\n  var fragmentNode = getFragment(fragment);\n  useStaticFragmentNodeWarning(fragmentNode, 'first argument of useFragment()');\n\n  var _useFragmentNode = useFragmentNode(fragmentNode, key, 'useFragment()'),\n      data = _useFragmentNode.data;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useDebugValue({\n      fragment: fragmentNode.name,\n      data: data\n    });\n  }\n\n  return data;\n}\n\nmodule.exports = useFragment;"]},"metadata":{},"sourceType":"script"}