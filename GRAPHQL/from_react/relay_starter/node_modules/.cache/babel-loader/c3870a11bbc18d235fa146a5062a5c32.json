{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n/**\n * A unique identifier of the current actor.\n */\n\nvar invariant = require('invariant');\n\nvar INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = 'INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE';\n\nfunction assertInternalActorIndentifier(actorIdentifier) {\n  !(actorIdentifier === INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to use only internal version of the `actorIdentifier`. \"%s\" was provided.', actorIdentifier) : invariant(false) : void 0;\n}\n\nmodule.exports = {\n  assertInternalActorIndentifier: assertInternalActorIndentifier,\n  getActorIdentifier: function getActorIdentifier(actorID) {\n    return actorID;\n  },\n  getDefaultActorIdentifier: function getDefaultActorIdentifier() {\n    throw new Error('Not Implemented');\n  },\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE\n};","map":{"version":3,"sources":["/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/node_modules/relay-runtime/lib/multi-actor-environment/ActorIdentifier.js"],"names":["invariant","require","INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE","assertInternalActorIndentifier","actorIdentifier","process","env","NODE_ENV","module","exports","getActorIdentifier","actorID","getDefaultActorIdentifier","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAIC,oCAAoC,GAAG,sCAA3C;;AAEA,SAASC,8BAAT,CAAwCC,eAAxC,EAAyD;AACvD,IAAEA,eAAe,KAAKF,oCAAtB,IAA8DG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,SAAS,CAAC,KAAD,EAAQ,oFAAR,EAA8FI,eAA9F,CAAjD,GAAkKJ,SAAS,CAAC,KAAD,CAAzO,GAAmP,KAAK,CAAxP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;AACfN,EAAAA,8BAA8B,EAAEA,8BADjB;AAEfO,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,OAA5B,EAAqC;AACvD,WAAOA,OAAP;AACD,GAJc;AAKfC,EAAAA,yBAAyB,EAAE,SAASA,yBAAT,GAAqC;AAC9D,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD,GAPc;AAQfX,EAAAA,oCAAoC,EAAEA;AARvB,CAAjB","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+relay\n * \n * @format\n */\n'use strict';\n/**\n * A unique identifier of the current actor.\n */\n\nvar invariant = require('invariant');\n\nvar INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE = 'INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE';\n\nfunction assertInternalActorIndentifier(actorIdentifier) {\n  !(actorIdentifier === INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Expected to use only internal version of the `actorIdentifier`. \"%s\" was provided.', actorIdentifier) : invariant(false) : void 0;\n}\n\nmodule.exports = {\n  assertInternalActorIndentifier: assertInternalActorIndentifier,\n  getActorIdentifier: function getActorIdentifier(actorID) {\n    return actorID;\n  },\n  getDefaultActorIdentifier: function getDefaultActorIdentifier() {\n    throw new Error('Not Implemented');\n  },\n  INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE: INTERNAL_ACTOR_IDENTIFIER_DO_NOT_USE\n};"]},"metadata":{},"sourceType":"script"}