{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nmodule.exports = {\n  create: create\n};","map":{"version":3,"sources":["/home/ting/Desktop/Projects/tutorials/GRAPHQL/from_react/relay_starter/node_modules/relay-runtime/lib/store/RelayOptimisticRecordSource.js"],"names":["_interopRequireDefault","require","_objectSpread2","RelayRecordSource","UNPUBLISH_RECORD_SENTINEL","Object","freeze","__UNPUBLISH_RECORD_SENTINEL","RelayOptimisticRecordSource","base","_base","_sink","create","_proto","prototype","has","dataID","sinkRecord","get","undefined","getStatus","record","clear","_delete","remove","set","getRecordIDs","keys","toJSON","size","length","_this","merged","forEach","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n// flowlint ambiguous-object-type:error\n'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar RelayRecordSource = require('./RelayRecordSource');\n\nvar UNPUBLISH_RECORD_SENTINEL = Object.freeze({\n  __UNPUBLISH_RECORD_SENTINEL: true\n});\n/**\n * An implementation of MutableRecordSource that represents a base RecordSource\n * with optimistic updates stacked on top: records with optimistic updates\n * shadow the base version of the record rather than updating/replacing them.\n */\n\nvar RelayOptimisticRecordSource = /*#__PURE__*/function () {\n  function RelayOptimisticRecordSource(base) {\n    this._base = base;\n    this._sink = RelayRecordSource.create();\n  }\n\n  var _proto = RelayOptimisticRecordSource.prototype;\n\n  _proto.has = function has(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      return sinkRecord !== UNPUBLISH_RECORD_SENTINEL;\n    } else {\n      return this._base.has(dataID);\n    }\n  };\n\n  _proto.get = function get(dataID) {\n    if (this._sink.has(dataID)) {\n      var sinkRecord = this._sink.get(dataID);\n\n      if (sinkRecord === UNPUBLISH_RECORD_SENTINEL) {\n        return undefined;\n      } else {\n        return sinkRecord;\n      }\n    } else {\n      return this._base.get(dataID);\n    }\n  };\n\n  _proto.getStatus = function getStatus(dataID) {\n    var record = this.get(dataID);\n\n    if (record === undefined) {\n      return 'UNKNOWN';\n    } else if (record === null) {\n      return 'NONEXISTENT';\n    } else {\n      return 'EXISTENT';\n    }\n  };\n\n  _proto.clear = function clear() {\n    this._base = RelayRecordSource.create();\n\n    this._sink.clear();\n  };\n\n  _proto[\"delete\"] = function _delete(dataID) {\n    this._sink[\"delete\"](dataID);\n  };\n\n  _proto.remove = function remove(dataID) {\n    this._sink.set(dataID, UNPUBLISH_RECORD_SENTINEL);\n  };\n\n  _proto.set = function set(dataID, record) {\n    this._sink.set(dataID, record);\n  };\n\n  _proto.getRecordIDs = function getRecordIDs() {\n    return Object.keys(this.toJSON());\n  };\n\n  _proto.size = function size() {\n    return Object.keys(this.toJSON()).length;\n  };\n\n  _proto.toJSON = function toJSON() {\n    var _this = this;\n\n    var merged = (0, _objectSpread2[\"default\"])({}, this._base.toJSON());\n\n    this._sink.getRecordIDs().forEach(function (dataID) {\n      var record = _this.get(dataID);\n\n      if (record === undefined) {\n        delete merged[dataID];\n      } else {\n        merged[dataID] = record;\n      }\n    });\n\n    return merged;\n  };\n\n  return RelayOptimisticRecordSource;\n}();\n\nfunction create(base) {\n  return new RelayOptimisticRecordSource(base);\n}\n\nmodule.exports = {\n  create: create\n};"]},"metadata":{},"sourceType":"script"}